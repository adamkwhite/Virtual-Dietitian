name: Build and analyze
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  # Stage 1: Quick validation checks
  quick-checks:
    name: Quick Validation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install linting tools
        run: |
          pip install flake8 black isort

      - name: Check code formatting (Black)
        run: |
          black --check cloud-functions/nutrition-analyzer/*.py || (echo "❌ Code formatting issues found. Run 'black cloud-functions/nutrition-analyzer/*.py' to fix." && exit 1)

      - name: Check import sorting (isort)
        run: |
          isort --check-only cloud-functions/nutrition-analyzer/*.py || (echo "❌ Import sorting issues found. Run 'isort cloud-functions/nutrition-analyzer/*.py' to fix." && exit 1)

      - name: Lint code (Flake8)
        run: |
          flake8 cloud-functions/nutrition-analyzer/*.py --max-line-length=100 --extend-ignore=E203,W503

  # Stage 2: Tests and SonarCloud analysis
  sonarcloud:
    name: Tests & SonarCloud Analysis
    needs: quick-checks  # Only run if quick checks pass
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for SonarCloud

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd cloud-functions/nutrition-analyzer
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          cd cloud-functions/nutrition-analyzer
          pytest --cov=. --cov-report=xml --cov-report=term

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Clean up build artifacts
        if: always() && github.event_name == 'push'
        run: |
          git checkout -- . || true
          git clean -fd || true
          git status
